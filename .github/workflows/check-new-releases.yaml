name: Check new builds and release them

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  pull_request:
  schedule:
    - cron: '53 0 * * *' # Daily at 00:53 UTC
  workflow_call:

jobs:
  download-builds:
    name: Build project
    runs-on: ubuntu-22.04
    timeout-minutes: 30
    steps:
      - name: Create credentials file
        env:
          CONSUMER_KEY: ${{ secrets.CONSUMER_KEY }}
          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
          ACCESS_SECRET: ${{ secrets.ACCESS_SECRET }}
        run: |
          touch credentials.txt
          echo "[1]" >> credentials.txt
          echo "consumer_key = $CONSUMER_KEY" >> credentials.txt
          echo "consumer_secret = " >> credentials.txt
          echo "access_token = $ACCESS_TOKEN" >> credentials.txt
          echo "access_secret = $ACCESS_SECRET" >> credentials.txt

      - name: Checkout
        uses: actions/checkout@v3
      - name: Install python dependencies
        run: pip install -r requirements.txt
      - name: Create temp folder where build are downloaded
        run: mkdir output
      - name: Download latest built version
        run: python3 launchpad_downloader.py --repository-url ~paolosottovia/test-spark-build/+git/test-spark-build --branch-prefix spark- --credential-file credentials.txt --output-folder output
      - name: Run output folders
        run: ls output
      - name: Generate matrix with all modules of WhatTheHack repository
        id: set-matrix
        run: |
          echo "::set-output name=matrix::$(ls -l | awk -F ' ' '{print $9}' |  jq -R -s -c 'split("\n") | map(select(length > 0))')"
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
  checklinks:
  needs: download-builds
  runs-on: ubuntu-latest
  strategy:
    fail-fast: false
    matrix:
      version: ${{ fromJson(needs.download-builds.outputs.matrix) }}
  steps:
    - name: Make release
      run: echo ${{ matrix.version }}